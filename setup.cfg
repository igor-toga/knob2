[metadata]
name = knob
summary = OpenStack SSH cloud service
description-file =
    README.rst
author = OpenStack
author-email = igor.shafran@toganetworks.com
home-page = http://www.openstack.org/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7

[global]
setup-hooks =
    pbr.hooks.setup_hook

[files]
packages =
    knob

[entry_points]
oslo.config.opts =
    knob = knob.opts:list_opts
    keystonemiddleware = keystonemiddleware.auth_token:list_opts
    oslo_concurrency = oslo_concurrency.opts:list_opts
    oslo.messaging = oslo_messaging.opts:list_opts
    oslo.db.concurrency = oslo.db.concurrency:list_opts
oslo.config.opts.defaults =
    knob = knob.common.config:set_middleware_defaults
console_scripts =
    knob-manage = knob.cmd.manage:main
    knob-ssh = knob.cmd.boot:main
wsgi_scripts =
    knob-wsgi = knob.wsgi.wsgi:initialize_application
# These are for backwards compat with Havana notification_driver configuration values
oslo_messaging.notify.drivers =
    knob.openstack.common.notifier.log_notifier = oslo_messaging.notify._impl_log:LogDriver
    knob.openstack.common.notifier.no_op_notifier = oslo_messaging.notify._impl_noop:NoOpDriver
    knob.openstack.common.notifier.rpc_notifier2 = oslo_messaging.notify.messaging:MessagingV2Driver
    knob.openstack.common.notifier.rpc_notifier = oslo_messaging.notify.messaging:MessagingDriver
    knob.openstack.common.notifier.test_notifier = oslo_messaging.notify._impl_test:TestDriver
# These are for backwards compatibility with Juno middleware configurations
oslo_middleware =
    knob.api.middleware.sizelimit = oslo_middleware.sizelimit
    knob.openstack.common.middleware.request_id = oslo_middleware.request_id

knob.database.migration_backend =
    sqlalchemy = oslo_db.sqlalchemy.migration

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[egg_info]
tag_build = 
tag_date = 0
tag_svn_revision = 0

[compile_catalog]
directory = knob/locale
domain = knob

[update_catalog]
domain = knob
output_dir = knob/locale
input_file = knob/locale/knob.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = knob/locale/knob.pot
